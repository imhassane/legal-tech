# import Company from "./company.graphql"
scalar DateTime

type MemberCompanyDetails @key(fields: "company { id }") {
    entryDate: DateTime!
    endDate: DateTime
    status: String!
    company: Company!
}

type CompanyMemberDetails @key(fields: "entryDate"){
    entryDate: DateTime!
    endDate: DateTime
    status: String!
    member: Member! @provides(fields: "firstName lastName avatar")
}

type MemberCompany @key(fields: "current { company { id } }") {
    current: MemberCompanyDetails
    past: [MemberCompanyDetails!]
}

type CompanyMembers @key(fields: "current { current { company { id } } }") {
    current: [CompanyMemberDetails!]
    out: [CompanyMemberDetails!]
    all: [CompanyMemberDetails!]
}

extend type Member @key(fields: "id") {
    id: ID! @external
    firstName: String! @external
    lastName: String! @external
    avatar: String! @external
    companies: MemberCompany
    hasCompany: Boolean!
}

input NewCompanyInput {
    name: String!
    prefecture: String!
    createdAt: String!
    description: String!
    identification: String!
}

extend type Query {
    companies(start: Int, limit: Int): [Company!]!
}

extend type Mutation {
    newCompany(data: NewCompanyInput): Company!
}