# import Article from "./article.graphql"

extend type Query {
    articles(start: Int!, limit: Int!): [Article!]
    article(id: ID!): Article!
    articleBySlug(slug: String!): Article!
}

extend type Mutation {
    newArticle(title: String!, content: String!, extract: String!, cover: String!, type: String!): Article!
    updateArticle(id: ID!, title: String, content: String, extract: String): Article!
    updateArticleCover(id: ID!, cover: String!): Article!
    updateArticleState(id: ID!, state: ArticleState): Article!
    deleteArticle(id: ID!): Article!

    newArticleComment(articleId: Int!, authorId: ID, fullName: String, email: String, content: String): Comment!
    newCommentReply(articleId: Int!, commentId: Int!, authorId: ID, fullName: String, email: String, content: String): Comment!
    updateCommentState(id: ID!, state: CommentState!): Comment!
    deleteComment(id: ID!): Comment!
}

type Article {
    author: User
}

type User {
    articles: [Article!]!
}